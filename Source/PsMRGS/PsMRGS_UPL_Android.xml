<?xml version="1.0" encoding="utf-8"?>
<root xmlns:android="http://schemas.android.com/apk/res/android">

	<androidManifestUpdates>
		<addLibrary android:name="org.apache.http.legacy" android:required="false"/>
		<addAttribute tag="application" name="android:usesCleartextTraffic" value="true"/>
	</androidManifestUpdates>

  <buildGradleAdditions>
	<insert>
	repositories {
		mavenCentral()

		jcenter()

		maven {
			url 'https://maven.google.com'
		}

		flatDir {
        	dirs 'libs'
      	}
	}

	configurations.all {
		resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		    def requested = details.requested
		    if (requested.group == 'com.android.support') {
		        if (!requested.name.startsWith("multidex")) {
		            details.useVersion '26.1.0'
		        }
		    }
		}
	}

	dependencies {
		implementation(name: 'MRGService', ext:'aar')
		implementation(name: 'MRGSAdvertising', ext:'aar')
		implementation(name: 'MRGSAnalytics', ext:'aar')
		implementation(name: 'MRGSBilling', ext:'aar')
		implementation(name: 'MRGSGDPR', ext:'aar')
		implementation(name: 'MRGSNotifications', ext:'aar')
		implementation(name: 'MRGSSupport', ext:'aar')

		implementation 'com.my.tracker:mytracker-sdk:2.1.2'
		implementation 'com.android.billingclient:billing:3.0.3'
		implementation 'com.google.android.gms:play-services-games:16.0.0'
		implementation 'com.google.android.gms:play-services-ads-identifier:16.0.0'
		implementation 'org.apache.httpcomponents:httpmime:4.2.5'
		implementation 'com.android.support:support-v4:26.1.0'
		implementation 'androidx.appcompat:appcompat:1.2.0'
		implementation 'com.google.firebase:firebase-messaging:21.0.1'
		implementation 'com.google.firebase:firebase-iid'
		implementation 'com.appsflyer:af-android-sdk:6.2.3'
	}

	</insert>
  </buildGradleAdditions>

	<!-- optional additions to proguard -->
	<proguardAdditions>
		<insert>
	
		-keep class com.my.** {*;}
		-keep class ru.mail.mrgservice.** {*;}
		-keep class com.mopub.** {*;}
		-keep class com.mopub.mobileads.CustomEventInterstitial
		-keep class android.app.** {*;}
		-keep class ru.mail.mrgservice.MRGSMap { *; }
		-keep class ru.mail.mrgservice.MRGSList { *; }
		-keep class org.apache.** { *;}
		-keep public class org.apache.http.entity.mime.** { *;}
		-keep class com.google.ads.conversiontracking.** { *; }
		-keep class com.google.android.finsky.** { *; }
		-keep class com.google.android.exoplayer2.** { *; }
		-keep class com.google.android.gms.analytics.** { *; }
		-keep class com.google.android.gms.gcm.** { *; }
		-dontwarn com.google.android.gms.**
		-keep class com.google.firebase.FirebaseApp { *; }
		-keep class com.google.firebase.iid.FirebaseInstanceId { *; }
		-keep class com.google.firebase.messaging.** { *; }
		-dontwarn com.google.firebase.**
		-keep class com.sec.android.iap.** { *; }
		-keep class com.android.installreferrer.** { *; }
		-keep class com.android.vending.billing.** { *; }
		-keep class com.android.billingclient.api.** { *; }
		-keep class com.appsflyer.AppsFlyerLib { *; }
		-keep class com.appsflyer.SingleInstallBroadcastReceiver { *; }
		-keep class com.appsflyer.AppsFlyerProperties { *; }
		-keep class com.chartboost.sdk.Chartboost { *; }
		-keep class com.chartboost.sdk.Tracking.CBAnalytics { *; }
		-keep class com.amazon.device.** { *; }
		-dontwarn com.amazon.device.**
		-dontnote com.appsflyer.**
		-dontnote com.mobileapptracker.**
		-dontnote com.google.ads.**
		-dontnote org.apache.http.**
		-dontnote android.app.**
		-dontnote com.oculus.**
		-dontnote org.apache.**
		-dontnote android.net.**
		-dontnote com.google.**
		-dontwarn org.apache.**
		-dontwarn ru.mail.mrgservice.**
		-dontnote com.chartboost.**
		-dontnote ru.mail.**
		-dontnote com.my.**
		-dontwarn com.epicgames.**
		-dontwarn com.appsflyer.**
		-dontnote com.epicgames.**
		-keep class java.lang.** { *; }
		-dontnote java.lang.**

		-keep class * extends java.util.ListResourceBundle { 
    		protected java.lang.Object[][] getContents(); 
		}

		-keepclassmembers class com.epicgames.ue4.GameActivity {
   			public *;
   			private *;
		}

		-keep class ru.mail.mrgservice.MRGServiceCpp {
   			public *;
   		}

   		-keepclassmembers class ru.mail.mrgservice.MRGServiceCpp  {
   			public *;
		}

		-dontwarn android.app.Activity
		-keepattributes EnclosingMethod
		-keepattributes InnerClasses
		-dontoptimize
		-dontshrink
		-dontusemixedcaseclassnames
		-dontskipnonpubliclibraryclasses
		-dontpreverify
		-verbose
	
		</insert>
	</proguardAdditions>

	<!-- optional files or directories to copy to Intermediate/Android/APK -->
 	<resourceCopies>	

		<deleteFiles filespec="src/com/android/vending/billing/IInAppBillingService.aidl" />
		<copyFile src="$S(PluginDir)/../../ThirdParty/Android/assets/MRGService.xml" dst="$S(BuildDir)/assets/MRGService.xml" />
		<copyFile src="$S(PluginDir)/../../ThirdParty/Android/assets/MRGServiceCpp.java" dst="$S(BuildDir)/src/ru/mrgservice/MRGServiceCpp.java" />
		<copyFile src="$S(PluginDir)/../../../../Build/GDPR/gdpr.html" dst="$S(BuildDir)/assets/gdpr/gdpr.html" />

		<copyFile src="$S(PluginDir)/../../ThirdParty/Android/MRGSAdvertising.aar" dst="$S(BuildDir)/gradle/app/libs/MRGSAdvertising.aar" />
		<copyFile src="$S(PluginDir)/../../ThirdParty/Android/MRGSAnalytics.aar" dst="$S(BuildDir)/gradle/app/libs/MRGSAnalytics.aar" />
		<copyFile src="$S(PluginDir)/../../ThirdParty/Android/MRGSBilling.aar" dst="$S(BuildDir)/gradle/app/libs/MRGSBilling.aar" />
		<copyFile src="$S(PluginDir)/../../ThirdParty/Android/MRGService.aar" dst="$S(BuildDir)/gradle/app/libs/MRGService.aar" />
		<copyFile src="$S(PluginDir)/../../ThirdParty/Android/MRGSGDPR.aar" dst="$S(BuildDir)/gradle/app/libs/MRGSGDPR.aar" />
		<copyFile src="$S(PluginDir)/../../ThirdParty/Android/MRGSNotifications.aar" dst="$S(BuildDir)/gradle/app/libs/MRGSNotifications.aar" />
		<copyFile src="$S(PluginDir)/../../ThirdParty/Android/MRGSSupport.aar" dst="$S(BuildDir)/gradle/app/libs/MRGSSupport.aar" />
		<copyFile src="$S(PluginDir)/../../ThirdParty/Android/MRGSSupport.aar" dst="$S(BuildDir)/gradle/app/libs/MRGSSupport.aar" />
		<copyFile src="$S(PluginDir)/../../ThirdParty/Android/in-app-purchasing-2.0.76.jar" dst="$S(BuildDir)/gradle/app/libs/in-app-purchasing-2.0.76.jar" />

		<!-- To remove proguard - uncomment -->
		<!-- <forceDeleteFileLine dst="$S(BuildDir)/project.properties" mask="proguard.config"/>
		 <forceDeleteFileLine dst="$S(BuildDir)/gradle/app/build.gradle" mask="proguardFiles"/>
		<forceDeleteFileLine dst="$S(BuildDir)/gradle/app/build.gradle" mask="minifyEnabled"/>		 -->
		<!-- <forceDeleteFile dst="$S(BuildDir)/src/com/android/vending/billing/IInAppBillingService.aidl"/> -->

		<!-- If using jars instead aar - uncomment -->
		<!-- <copyFile src="$S(PluginDir)/../../ThirdParty/Android/AF-Android-SDK.jar" dst="$S(BuildDir)/libs/AF-Android-SDK.jar" />
		<copyFile src="$S(PluginDir)/../../ThirdParty/Android/GoogleConversionTrackingSdk-2.2.4.jar" dst="$S(BuildDir)/libs/GoogleConversionTrackingSdk-2.2.4.jar" />
 		<copyFile src="$S(PluginDir)/../../ThirdParty/Android/in-app-purchasing-2.0.76.jar" dst="$S(BuildDir)/libs/in-app-purchasing-2.0.76.jar" />
		<copyFile src="$S(PluginDir)/../../ThirdParty/Android/MobileAppTracker.jar" dst="$S(BuildDir)/libs/MobileAppTracker.jar" />
		<copyFile src="$S(PluginDir)/../../ThirdParty/Android/MRGService.jar" dst="$S(BuildDir)/libs/MRGService.jar" /> -->
		<!-- <copyFile src="$S(PluginDir)/../../ThirdParty/Android/myTracker.jar" dst="$S(BuildDir)/libs/myTracker.jar" /> -->
		<!-- <copyFile src="$S(PluginDir)/../../ThirdParty/Android/httpmime-4.1.2.jar" dst="$S(BuildDir)/libs/httpmime-4.1.2.jar" /> -->
	</resourceCopies>

	<!-- optional additions to the GameActivity imports in GameActivity.java -->
	<gameActivityImportAdditions>
		<insert>
			import android.os.Bundle;
			import ru.mail.mrgservice.*;
			import ru.mail.mrgservice.MRGServiceCpp;
			import android.util.Log;
			import java.util.ArrayList;
			import java.util.List;
			import java.util.Map;
			
			import java.io.ByteArrayOutputStream;
			import java.io.ByteArrayInputStream;
			import java.io.DataInputStream;
			import java.io.DataOutputStream;
			import java.io.File;
			import java.io.FileInputStream;
			import java.io.FileOutputStream;
			import java.io.IOException;
			import java.io.RandomAccessFile;
			
			import android.app.backup.BackupAgent;
			import android.app.backup.BackupDataInput;
			import android.app.backup.BackupDataOutput;
			import android.app.backup.BackupAgentHelper;
			import android.app.backup.BackupManager;
			import android.app.backup.RestoreObserver;
			import android.os.ParcelFileDescriptor;
		</insert>
	</gameActivityImportAdditions>
	

	<!-- optional additions to the GameActivity class in GameActivity.java -->
	<gameActivityClassAdditions>
		<insert>

		private boolean bInitialized = false;
		private boolean bWaitForInitialize = false;
		private boolean bWaitForInitializeToCallStop = false;
	
		public void OnMrgsInitComplete()
		{
			bInitialized = true;
			if (bWaitForInitializeToCallStop)
			{
				bWaitForInitializeToCallStop = false;
				MRGServiceCpp.appContext = getApplicationContext();
				MRGService.setAppContext(getApplicationContext());
				MRGService.instance().onStop(this);
			}
			if (bWaitForInitialize)
			{
				bWaitForInitialize = false;
				MRGServiceCpp.appContext = getApplicationContext();
				MRGService.setAppContext(getApplicationContext());
				MRGService.instance().onStart(this);
			}
		}

		public void runOnNecessaryThread(final Runnable callback) 
		{
			runOnUiThread(callback);
		}

		public void AndroidThunkJava_MRGService_ShowDefaultGDPRAgreement(final String appId, final boolean bOnlyEU, final boolean bWithAdvertising)
		{
			MRGServiceCpp.ShowDefaultGDPRAgreement(appId, bOnlyEU, bWithAdvertising);
		}

		public void AndroidThunkJava_MRGService_ShowGDPRAgreement(final String appId, final boolean bOnlyEU, final boolean bWithAdvertising)
		{
			MRGServiceCpp.ShowGDPRAgreement(appId, bOnlyEU, bWithAdvertising);
		}

		public int AndroidThunkJava_MRGService_GetGDPRAcceptedVersion()
		{
			return MRGServiceCpp.GetGDPRAcceptedVersion();
		}

		public boolean AndroidThunkJava_MRGService_ShouldShowCCPA()
		{
			return MRGServiceCpp.ShouldShowCCPA();
		}

		public int AndroidThunkJava_MRGService_GetCCPASettingValue()
		{
			return MRGServiceCpp.GetCCPASettingValue();
		}

		public void AndroidThunkJava_MRGService_SetCCPASettingValue(int Value)
		{
			MRGServiceCpp.SetCCPASettingValue(Value);
		}

		public void AndroidThunkJava_MRGService_checkIntegration()
		{
			MRGServiceCpp.checkIntegration();
		}

		public void AndroidThunkJava_MRGService_initWithAppIdAndSecret(final String AppId, final String AppSecret, final String SupportSecret, final boolean bDebug)
		{
			MRGServiceCpp.appContext = getApplicationContext();
			MRGService.setAppContext(getApplicationContext());
			MRGServiceCpp.initWithAppidAndSecret(AppId, AppSecret, SupportSecret, bDebug);
		}

		public void AndroidThunkJava_MRGService_initUserWithId(String userId)
		{
			MRGServiceCpp.initUser(userId);
		}

		public void AndroidThunkJava_MRGService_autoRestoreTransactions(final boolean bRestore)
		{
			MRGServiceCpp.autoRestoreTransactions(bRestore);
		}

		public void AndroidThunkJava_MRGService_showSupport(final String secretKey)
		{
			MRGServiceCpp.showSupport(secretKey);
		}

		public void AndroidThunkJava_MRGService_checkTickets()
		{
			MRGServiceCpp.checkTickets();
		}

		public void AndroidThunkJava_MRGService_sendAFEvent(final String eventName, final String value) 
		{
			MRGServiceCpp.sendAFEvent(eventName, value);
		}

		public void AndroidThunkJava_MRGService_getProductsInfo(final String skuList)
		{
			MRGServiceCpp.getProductsInfo(skuList);
		}

		public void AndroidThunkJava_MRGService_buyItem(final String sku)
		{
			MRGServiceCpp.buyItem(sku);
		}

		public void AndroidThunkJava_MRGService_addMetricWithId(final int metricId)
		{
			MRGServiceCpp.addMetric(metricId);
		}
		
		public void AndroidThunkJava_MRGService_addMetricWithCode(final String metricCode, final int value, final int level, final int objectId)
		{
			MRGServiceCpp.addMetric(metricCode, value, level, objectId);
		}
		
		</insert>
		
	</gameActivityClassAdditions>
	
	<!-- optional additions to GameActivity onCreate metadata reading in GameActivity.java -->
	<gameActivityReadMetadataAdditions>
	</gameActivityReadMetadataAdditions>
	
	<!-- optional additions to GameActivity onCreate in GameActivity.java -->
	<gameActivityOnCreateAdditions>
	</gameActivityOnCreateAdditions>

	<!-- optional additions to GameActivity onDestroy in GameActivity.java -->
	<gameActivityOnDestroyAdditions>
	</gameActivityOnDestroyAdditions>
	
	
	<!-- optional additions to GameActivity onStart in GameActivity.java -->
	<gameActivityOnStartAdditions>
		<insert>
			if (bInitialized == true)
			{
				MRGServiceCpp.appContext = getApplicationContext();
				MRGService.setAppContext(getApplicationContext());
				MRGService.instance().onStart(this);
			}
			else
			{
				bWaitForInitialize = true;
			}
		</insert>
	</gameActivityOnStartAdditions>

	<!-- optional additions to GameActivity onStop in GameActivity.java -->
	<gameActivityOnStopAdditions>
		<insert>
 			if (bInitialized == true)
			{
				MRGServiceCpp.appContext = getApplicationContext();
				MRGService.setAppContext(getApplicationContext()); 
				MRGService.instance().onStop(this);
			}
			else
			{
				bWaitForInitializeToCallStop = true;
			}
		</insert>
	</gameActivityOnStopAdditions>
	

	<!-- optional additions to GameActivity onPause in GameActivity.java	-->
	<gameActivityOnPauseAdditions>
	</gameActivityOnPauseAdditions>


	<!-- optional additions to GameActivity onResume in GameActivity.java	-->
	<gameActivityOnResumeAdditions>
	</gameActivityOnResumeAdditions>


	<!-- optional additions to GameActivity onActivityResult in GameActivity.java -->
	<gameActivityOnActivityResultAdditions>
	</gameActivityOnActivityResultAdditions>
	

	<!-- optional libraries to load in GameActivity.java before libUE4.so -->
	<soLoadLibrary>
	</soLoadLibrary>
</root>
